
class Solution {
    private static final int INF= Integer.MAX_VALUE;
    public void wallsAndGates(int[][] rooms) {
        int m= rooms.length;
        int n=rooms[0].length;
        Queue<int[]> queue= new LinkedList<>();

        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(rooms[i][j]==0){
                    queue.add(new int[]{i,j});

                }

            }

        }

        int[][] dirs= {{-1,0},{1,0},{0,1},{0,-1}};
        while(!queue.isEmpty()){
            int[] pos= queue.poll();
            int row= pos[0];
            int col= pos[1];

            for(int[] d:dirs){
                int newrow= row+ d[0];
                int newcol=col+ d[1];


                if(newrow>=0 && newrow<m && newcol>=0 && newcol<n && rooms[newrow][newcol]==INF){
                    rooms[newrow][newcol]=rooms[row][col]+1;
                    queue.add(new int[]{newrow,newcol});

                }

            }

        }

     
        
    }
}
